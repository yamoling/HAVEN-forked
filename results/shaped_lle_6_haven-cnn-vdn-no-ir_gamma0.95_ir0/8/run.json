{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/workspaces/HAVEN-forked/src",
    "dependencies": [
      "numpy==2.2.0",
      "PyYAML==6.0.2",
      "sacred==0.8.7",
      "torch==2.5.1+cu118"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "7d43c7e464ce80c791c881c921276dac23aa0224",
        "dirty": true,
        "url": "https://github.com/yamoling/HAVEN-forked.git"
      },
      {
        "commit": "7d43c7e464ce80c791c881c921276dac23aa0224",
        "dirty": true,
        "url": "https://github.com/yamoling/HAVEN-forked.git"
      },
      {
        "commit": "7d43c7e464ce80c791c881c921276dac23aa0224",
        "dirty": true,
        "url": "https://github.com/yamoling/HAVEN-forked.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_19e8b31f0f913ab795c5c273a47154ab.py"
      ],
      [
        "run.py",
        "_sources/run_3f214b756e95b1eb26112363ec9f16fb.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_38e7c3c11a8722f1c40f9bab14330d30.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/workspaces/HAVEN-forked/.venv/lib/python3.12/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "  File \"/workspaces/HAVEN-forked/src/main.py\", line 38, in my_main\n    run(_run, config, _log)\n",
    "  File \"/workspaces/HAVEN-forked/src/run.py\", line 56, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/workspaces/HAVEN-forked/src/run.py\", line 269, in run_sequential\n    learner.train(episode_sample, macro_episode_sample, runner.t_env, episode)\n",
    "  File \"/workspaces/HAVEN-forked/src/learners/haven_learner.py\", line 199, in train\n    loss.backward()\n",
    "  File \"/workspaces/HAVEN-forked/.venv/lib/python3.12/site-packages/torch/_tensor.py\", line 581, in backward\n    torch.autograd.backward(\n",
    "  File \"/workspaces/HAVEN-forked/.venv/lib/python3.12/site-packages/torch/autograd/__init__.py\", line 347, in backward\n    _engine_run_backward(\n",
    "  File \"/workspaces/HAVEN-forked/.venv/lib/python3.12/site-packages/torch/autograd/graph.py\", line 825, in _engine_run_backward\n    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 178.00 MiB. GPU 7 has a total capacity of 10.92 GiB of which 141.69 MiB is free. Process 1056419 has 8.16 GiB memory in use. Process 1060951 has 2.61 GiB memory in use. Of the allocated memory 1.28 GiB is allocated by PyTorch, and 628.51 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)\n"
  ],
  "heartbeat": "2024-12-27T22:25:53.136635",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz",
    "gpus": {
      "driver_version": "470.256.02",
      "gpus": [
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11177
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        },
        {
          "model": "NVIDIA GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        }
      ]
    },
    "hostname": "f3400f87bc47",
    "os": [
      "Linux",
      "Linux-6.8.0-48-generic-x86_64-with-glibc2.31"
    ],
    "python_version": "3.12.8"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "seed": 7
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.seed=7"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-12-27T22:24:40.813502",
  "status": "FAILED",
  "stop_time": "2024-12-27T22:25:53.140237"
}